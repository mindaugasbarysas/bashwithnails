#!/bin/bash
#NAMESPACE=testing

namespaced COVERAGE_DATA=''
namespaced ASSUME_COVERED=0
namespaced UNCOVERABLES='^$ ^# ^{ ^} ^done$ ^then$ ^else$ ^fi$ ^do$'

function get_coverage(testfile) {
    export PS4='D: ${BASH_SOURCE} ${LINENO} +++ '
    namespaced COVERAGE_DATA=`/bin/bash -xv $testfile 2>&1| grep '^D*:' | cut -d\+ -f1 | cut -d- -f2- | sed -e 's/~/\//g' | grep -v "^D*:" | sort | uniq |\
    sed -e 's/\.cached / /g'`

}

function get_uncoverable(line) {
    local grepfound=0
    for uncase in ${namespaced UNCOVERABLES}
    do
        let grepfound=$grepfound+`echo "$line" | sed -e "s/ //g" | grep -c "$uncase"`
    done
    echo $grepfound
}

function coverage_toggle(line) {
    if [[ `echo $line | sed -e "s/ //g" | grep -c '^#@covered-begin'` -eq 1 ]]
    then
        namespaced ASSUME_COVERED=1
    fi
    if [[ `echo $line | sed -e "s/ //g" | grep -c '^#@covered-end'` -eq 1 ]]
    then
        namespaced ASSUME_COVERED=0
    fi
}

function is_covered(file line_num) {
    if [[ ${namespaced ASSUME_COVERED} -eq 0 ]]
    then
        echo "${namespaced COVERAGE_DATA}" | grep "^${file} " | cut -d\  -f2 | grep -c "^${line_num}$"
    else
        echo 1
    fi
}

function print_stats(filename total covered uncoverable) {
    echo "$filename:"
    local PERCENT=`echo "scale=2; (${covered}/(${total}-${uncoverable}))*100" | bc`
    echo " Total lines: $total  / Uncoverable: $uncoverable / Covered: $covered ($PERCENT%) "
}

function coverage_verbose(testfile ignore_file) {
    this::get_coverage $testfile

    uniq_fn=`echo "${namespaced COVERAGE_DATA}" | cut -d\  -f1 | uniq | grep -v $ignore_file`

    for file in $uniq_fn
    do
        echo Code coverage of: $SCRIPT_DIR/$MODULE_DIR/$file
        local LINE_NO=0
        local LN_TOTAL=0
        local LN_COVERED=0
        local LN_UNCOVERABLE=0
        while IFS='' read -r line ||  [[ -n "$line" ]]; do
            let LINE_NO=$LINE_NO+1
            this::coverage_toggle "$line"
            if [[ `this::is_covered $file $LINE_NO` -eq 1 ]]
            then
                let LN_COVERED=$LN_COVERED+1
                echo -en $'\e[0;32m'" $LINE_NO: $line \n"$'\e[39;49m'
            else
                if [[ `this::get_uncoverable "$line"` -gt 0 ]]
                then
                    let LN_UNCOVERABLE=$LN_UNCOVERABLE+1
                    echo -en $'\e[0;37m'" $LINE_NO: $line \n"$'\e[39;49m'
                else
                    echo -en $'\e[0;31m'" $LINE_NO: $line \n"$'\e[39;49m'
                fi
            fi
        let LN_TOTAL=$LN_TOTAL+1
        done < $SCRIPT_DIR/$MODULE_DIR/$file
        this::print_stats $SCRIPT_DIR/$MODULE_DIR/$file $LN_TOTAL $LN_COVERED $LN_UNCOVERABLE
    done
}


function coverage_summary_exact(testfile ignore_file) {
    this::get_coverage $testfile

    uniq_fn=`echo "${namespaced COVERAGE_DATA}" | cut -d\  -f1 | uniq | grep -v $ignore_file`

    for file in $uniq_fn
    do
        local LINE_NO=0
        local LN_TOTAL=0
        local LN_COVERED=0
        local LN_UNCOVERABLE=0
        while IFS='' read -r line ||  [[ -n "$line" ]]; do
            let LINE_NO=$LINE_NO+1
            this::coverage_toggle "$line"
            if [[ `this::is_covered $file $LINE_NO` -eq 1 ]]
            then
                let LN_COVERED=$LN_COVERED+1
            else
                if [[ `this::get_uncoverable "$line"` -gt 0 ]]
                then
                    let LN_UNCOVERABLE=$LN_UNCOVERABLE+1
                fi
            fi
        let LN_TOTAL=$LN_TOTAL+1
        done < $SCRIPT_DIR/$MODULE_DIR/$file
        this::print_stats $SCRIPT_DIR/$MODULE_DIR/$file $LN_TOTAL $LN_COVERED $LN_UNCOVERABLE
    done
}

function coverage_summary_fast(testfile ignore_file) {
    this::get_coverage $testfile

    uniq_fn=`echo "${namespaced COVERAGE_DATA}" | cut -d\  -f1 | uniq | grep -v $ignore_file`

    for file in $uniq_fn
    do
        local fcontent=`cat $SCRIPT_DIR/$MODULE_DIR/$file | sed -e 's/ //g'`
        local LN_COVERED=`echo "${namespaced COVERAGE_DATA}" | grep "^${file} " | cut -d\  -f2 | grep -c "^"`
        local LN_ANOT=`echo "$fcontent" | sed -n '/#@covered-begin/,/#@covered-end/ p' | wc -l | sed -e 's/ //g'`
        if [[ LN_ANOT -gt 0 ]]
        then
            let LN_ANOT=$LN_ANOT-2
        fi
        let LN_COVERED=$LN_COVERED+$LN_ANOT
        local LN_TOTAL=`echo "$fcontent" | wc -l | sed -e 's/ //g'`
        local LN_UNCOVERABLE=`this::get_uncoverable "$fcontent"`
        this::print_stats $SCRIPT_DIR/$MODULE_DIR/$file $LN_TOTAL $LN_COVERED $LN_UNCOVERABLE
    done
}
